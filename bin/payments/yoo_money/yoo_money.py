from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

import database
from loader import dp
from bin.payments.yoo_money.yoo_money_params import yoomoney_auth, generate_token
from src.const import is_const
from bin.keyboards import cancel_keyboard, get_keyboard_for_finish


class YooMoneyEditor(StatesGroup):
    client_id = State()
    redirect_uri = State()
    authorize = State()


async def client_id(message: types.Message):
    """
    –ó–∞–ø—Ä–æ—Å client_id

    :param message:
    :return:
    """
    await message.answer("–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ API <a href='https://yoomoney.ru/myservices/new'>–∑–¥–µ—Å—å</a>\n"
                         "üì± –í–≤–µ–¥–∏—Ç–µ <b>client_id</b>", reply_markup=cancel_keyboard)
    await YooMoneyEditor.client_id.set()


@dp.message_handler(state=YooMoneyEditor.client_id)
async def redirect_uri(message: types.Message, state: FSMContext):
    """
    –ó–∞–ø—Ä–æ—Å redirect_uri

    :param message:
    :param state:
    :return:
    """
    id = message.text
    if is_const(id):
        await message.answer("‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π <b>client_id</b>")
        return

    await state.update_data(client_id=id)
    await YooMoneyEditor.next()
    await message.answer("üåê –í–≤–µ–¥–∏—Ç–µ <b>redirect_uri</b>")


@dp.message_handler(state=YooMoneyEditor.redirect_uri)
async def authorize_url(message: types.Message, state: FSMContext):
    """
    –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–æ—à–µ–ª—å–∫–∞

    :param message:
    :param state:
    :return:
    """
    uri = message.text
    if is_const(uri):
        await message.answer("‚ùóÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π <b>redirect_uri</b>")
        return

    await state.update_data(redirect_uri=uri)
    data = await state.get_data()

    auth_url = yoomoney_auth(data['client_id'], uri)

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="üíª –ê–∫—Ç–∏–≤–∞—Ü–∏—è", url=auth_url))

    await message.answer("‚ùóÔ∏è –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ "
                         "–ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏–∏\n "
                         "‚ùóÔ∏è –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏ <b>1 –º–∏–Ω—É—Ç–∞</b>",
                         reply_markup=keyboard)
    await YooMoneyEditor.next()


@dp.message_handler(state=YooMoneyEditor.authorize)
async def authorize_payment(message: types.Message, state: FSMContext):
    """
    –†–∞–∑–±–æ—Ä —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞

    :param message:
    :param state:
    :return:
    """
    url = message.text
    if is_const(url):
        await message.answer("‚ùóÔ∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞")
        return

    data = await state.get_data()

    access_token = generate_token(data['client_id'], data['redirect_uri'], url)

    if access_token is not None:
        # —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ
        num = access_token.split(".")[0]
        await state.update_data(num=num)
        await state.update_data(token=access_token)

        yoomoney_data = await state.get_data()
        database.edit_yoomoney(yoomoney_data)

        message_text = "‚úÖ –ö–æ—à–µ–ª–µ–∫ –∏–∑–º–µ–Ω–µ–Ω"
    else:
        message_text = "‚ùóÔ∏è –ö–æ—à–µ–ª–µ–∫ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–Ω–æ–≤–∞"

    await message.answer(message_text, reply_markup=get_keyboard_for_finish(message.chat.id))

    await state.finish()
